type Query {
    greeting(name: String! = "Spring"): String!
    artifactRepositories : [ArtifactRepository]
    project(slug: ID!): Project
}

type ArtifactRepository {
    id: ID!
    name: String!
    url: String!
    snapshotsEnabled: Boolean
}

type Project {
    slug: ID!
    name: String!
    repositoryUrl: String!
    status: ProjectStatus!
    releases: [Release!]
    contributors: [Contributor!]
}

enum ProjectStatus {
    ACTIVE
    COMMUNITY
    INCUBATING
    ATTIC
    EOL
}

type Release {
    version: String!
    status: ReleaseStatus!
    referenceDocUrl: String!
    apiDocUrl: String!
    current: Boolean
    repository: ArtifactRepository!
}

enum ReleaseStatus {
    GENERAL_AVAILABILITY
    MILESTONE
    SNAPSHOT
}

type Contributor {
    gitHubId: String
    contributionsCount: Int
    profile: Profile!
}

type Profile {
    gitHubId: String!
    name: String
    company: String
    location: String
    twitter: String
    profileUrl: String
}
